/* ボタンの背景枠用CSS */
.left_button_window,.right_button_window,.center_button_window {
    background-color: rgba(255,255,255,0.82);
    border:solid 3px rgba(0,0,0,0.82);
    width:340px;
    padding: 0.2rem 0.2rem 0.2rem 0.2rem;
    border-radius: 20px 20px 20px 20px / 20px 20px 20px 20px;
}

/* glinkのcolor用CSS */
.btn_voivo {
    position: relative;
    display: inline-block;
    padding: .5em .4em;
    background-color: #CCFFC7;
    color: #28332a;
    border-radius: 1.5em;
    border: none;
    box-shadow: none;
    box-sizing: border-box;
    transition: .15s ease-out;
}

.btn_voivo::after {
    position: absolute;
    content: "";
    background-color: none;
    top: -5px;
    right: -5px;
    bottom: -5px;
    left: -5px;
    border-radius: 1.5em;
    border: 3px solid #87AD8E;
    transition: .15s ease-out;
}

.btn_voivo:hover {
    background-color: #69876E;
}

.btn_voivo:hover::after {
    border: 1px solid #4C614F;
}

.btn_voivo:active {
    transform: scale(.96);
}

/* glinkのname用CSS。colorの要素を上書きしたい要素だけ設定する */
.btn_voivo_selected {
    background-color: #80da87;
}

.btn_voivo_black {
    background-color: #242424;
    color: #f7f7f7;
}

.btn_voivo_white {
    background-color: #f7f7f7;
    color: #242424;
}

/* 横並びでキャラクター画像を表示するサブルーチン用CSS */
.dch_container {
    display: flex;
    flex-direction: row;
}

.dch_box {
    /* width: 256px; */
    height: 720px;
}

/* ステータス画面用 */
.main {
    background-color: rgba(0, 0, 0, 1);
    font-family: "MPLUSRounded";
    font-size: 22pt;
    line-height: 1.65;
    color: #28332a;
    width: 1280px;
    height: 720px;
}
.window {
    background-color: rgba(240,240,240,1);
    border:solid 3px rgba(0,0,0,0.82);
    width: 1262px;
    height: 149px;
    padding: 7px;
    border-radius: 20px 20px 20px 20px / 20px 20px 20px 20px;
}


input {
    display: none;
}
input:checked + label {
    background: #80da87;/* マウス選択時の背景色を指定する */
}

.radioLabel,.checkLabel {
    position: relative;
    display: inline-block;
    margin: 10px 10px; /* ボックス外側の余白を指定する */
    /* width: 120px; ボックスの横幅を指定する */
    text-align: center; /* テキストのセンタリングを指定する */
    /* line-height: 22px; /* 行の高さを指定する */
    background-color: #CCFFC7;
    cursor: pointer; /* マウスカーソルの形（リンクカーソル）を指定する */
    /* border: 3px solid #87AD8E;/* ボックスの境界線を実線で指定する */
    /* border-radius: 5px; 角丸を指定する */
    padding: 1px 15px 3px 14px;
    border-radius: 1.5em;
    border: none;
    box-shadow: none;
    box-sizing: border-box;
    transition: .15s ease-out;
}
.radioLabel::after,.checkLabel::after {
    position: absolute;
    content: "";
    background-color: none;
    top: -6px;
    right: -6px;
    bottom: -6px;
    left: -6px;
    border-radius: 1.5em;
    border: 3px solid #87AD8E;
    transition: .15s ease-out;
}

.radioLabel:hover,.checkLabel:hover {
    background-color: #69876E;
}

.radioLabel:hover::after,.checkLabel:hover::after {
    border: 1px solid #4C614F;
}



.counter {
    display: inline-block;
}
.counter button {
    border-radius: 50%;
    background-color: #CCFFC7;
    width: 30px;
    height: 30px;
    font-size: 24px;
    line-height: 1;
    border: none;
    cursor: pointer;
}

.dchStatusContainer {
    display: flex;
    flex-direction: row;
    height: 551px;/* .mainのheight - .windowのheight = 571pxだと思っていたが実測551pxでぴったりだった */
}

.statusBox {
    position: relative;
}

.statusBoxVerticalText {
    position: absolute;
    writing-mode: vertical-lr; /* 文字列を垂直方向に、左から右に配置する */
    text-orientation: upright; /* 文字列を常に垂直に表示する */
    font-family: にくまるフォント;
    font-size: 30pt;
    color: #28332a;
    /* text-shadow: $.generateTextShadowStrokeCSS('2px #FFFFFF'), /* tyrano/libs.jsの縁取り用メソッドを借用するので、ここでは設定せずに処理内で呼び出す */
    margin-left: -7px;
    margin-top: 5px;
    z-index: 2; /* 文字は画像より上に出す*/
}

.statusBoxCharaImg {
    position: relative;
    z-index: 1; /* 画像は文字より下に出す*/
}


.infoContainer {
    position: absolute;
    display: flex;
    flex-direction: column;
    bottom: 0;
    z-index: 3; /* キャラ画像、キャラ名よりも上 */
}

.roleInfoBox {
    position: relative;
    display: flex;
    justify-content: center;
    /* 以下は処理内で動的に設定する
    height: 80px;
    background-color: rgba(247, 247, 247, 0.9); /* #f7f7f7
    color: rgba(36, 36, 36, 0.9); /* #242424
    */
}

.deathInfoBox {
    /* 以下は処理内で動的に設定する
    height: 80px;
    background-color: rgba(36, 36, 36, 0.9); /* #242424
    color: rgba(247, 247, 247, 0.9); /* #f7f7f7
    */
}

.roleIconImg {
    position: relative;
    display: block;
    max-height: 100%;
    width: auto;
    max-width: 100%;
    object-fit: contain;
}

.roleHistoryInfoBox {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    /* 以下は処理内で動的に設定する
    height: 80px;
    background-color: rgba(247, 247, 247, 0.9); /* #f7f7f7
    color: rgba(36, 36, 36, 0.9); /* #242424
    */
}

.sdCharaImg {
    position: relative;
    display: inline-block;
    height: 100%;
}

.balloonTop {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 10px 0px 2px 5px;/* 横方向の中央揃えの微調整 */
    padding: 2px 8px;
    background: #FFFFFF;
    border: solid 3px #28332a;
    box-sizing: border-box;
    border-radius: 15px;
    max-width: 80px; /* 最大でも1Boxの高さの最大値とする。子要素の画像の幅はそれより必ず小さくなるため問題なし。max-widthを指定しないと、フキダシの幅がboxの幅に合ってしまう */
}
  
.balloonTop:before {
    content: "";
    position: absolute;
    top: -19px;
    left: 50%;
    margin-left: -12px;
    border: 12px solid transparent;
    border-bottom: 9px solid #FFFFFF;
    z-index: 2;
}
  
.balloonTop:after {
    content: "";
    position: absolute;
    top: -25px;
    left: 50%;
    margin-left: -14px;
    border: 14px solid transparent;
    border-bottom: 10px solid #28332a;
    z-index: 1;
}


.balloonLeft {
    position: relative;
    display: inline-block;
    margin: 0px 6px 0px 12px;/* 横方向の中央揃えの微調整 */
    padding: 7px 5px;
    max-width: 100%;
    background: #FFFFFF;
    border: solid 3px #28332a;
    box-sizing: border-box;
    border-radius: 15px;
    top: 44%; /* 縦方向の中央揃え。50％だと少し下寄りだったので微調整 */
    transform: translateY(-50%);
}

.balloonLeft:before {
    content: "";
    position: absolute;
    top: 50%;
    left: -24px;
    margin-top: -12px;
    border: 12px solid transparent;
    border-right: 13px solid #FFFFFF; /* borderよりも1px増やしている。しないと.balloonLeftの縦線がうっすら見えてしまう */
    z-index: 2;
}

.balloonLeft:after {
    content: "";
    position: absolute;
    top: 50%;
    left: -30px;
    margin-top: -14px;
    border: 14px solid transparent;
    border-right: 14px solid #28332a;
    z-index: 1;
}
